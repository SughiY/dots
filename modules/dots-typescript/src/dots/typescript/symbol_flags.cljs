(ns dots.typescript.symbol-flags
  (:refer-clojure :exclude [type namespace transient])
  (:require ["typescript" :as ts]))

(def none (.-None ts/SymbolFlags))
(def function-scoped-variable (.-FunctionScopedVariable ts/SymbolFlags))
(def block-scoped-variable (.-BlockScopedVariable ts/SymbolFlags))
(def property (.-Property ts/SymbolFlags))
(def enum-member (.-EnumMember ts/SymbolFlags))
(def function (.-Function ts/SymbolFlags))
(def class (.-Class ts/SymbolFlags))
(def interface (.-Interface ts/SymbolFlags))
(def const-enum (.-ConstEnum ts/SymbolFlags))
(def regular-enum (.-RegularEnum ts/SymbolFlags))
(def value-module (.-ValueModule ts/SymbolFlags))
(def namespace-module (.-NamespaceModule ts/SymbolFlags))
(def type-literal (.-TypeLiteral ts/SymbolFlags))
(def object-literal (.-ObjectLiteral ts/SymbolFlags))
(def method (.-Method ts/SymbolFlags))
(def constructor (.-Constructor ts/SymbolFlags))
(def get-accessor (.-GetAccessor ts/SymbolFlags))
(def set-accessor (.-SetAccessor ts/SymbolFlags))
(def signature (.-Signature ts/SymbolFlags))
(def type-parameter (.-TypeParameter ts/SymbolFlags))
(def type-alias (.-TypeAlias ts/SymbolFlags))
(def export-value (.-ExportValue ts/SymbolFlags))
(def alias (.-Alias ts/SymbolFlags))
(def prototype (.-Prototype ts/SymbolFlags))
(def export-star (.-ExportStar ts/SymbolFlags))
(def optional (.-Optional ts/SymbolFlags))
(def transient (.-Transient ts/SymbolFlags))
(def assignment (.-Assignment ts/SymbolFlags))
(def module-exports (.-ModuleExports ts/SymbolFlags))
(def enum (.-Enum ts/SymbolFlags))
(def variable (.-Variable ts/SymbolFlags))
(def value (.-Value ts/SymbolFlags))
(def type (.-Type ts/SymbolFlags))
(def namespace (.-Namespace ts/SymbolFlags))
(def module (.-Module ts/SymbolFlags))
(def accessor (.-Accessor ts/SymbolFlags))
(def function-scoped-variable-excludes (.-FunctionScopedVariableExcludes ts/SymbolFlags))
(def block-scoped-variable-excludes (.-BlockScopedVariableExcludes ts/SymbolFlags))
(def parameter-excludes (.-ParameterExcludes ts/SymbolFlags))
(def property-excludes (.-PropertyExcludes ts/SymbolFlags))
(def enum-member-excludes (.-EnumMemberExcludes ts/SymbolFlags))
(def function-excludes (.-FunctionExcludes ts/SymbolFlags))
(def class-excludes (.-ClassExcludes ts/SymbolFlags))
(def interface-excludes (.-InterfaceExcludes ts/SymbolFlags))
(def regular-enum-excludes (.-RegularEnumExcludes ts/SymbolFlags))
(def const-enum-excludes (.-ConstEnumExcludes ts/SymbolFlags))
(def value-module-excludes (.-ValueModuleExcludes ts/SymbolFlags))
(def namespace-module-excludes (.-NamespaceModuleExcludes ts/SymbolFlags))
(def method-excludes (.-MethodExcludes ts/SymbolFlags))
(def get-accessor-excludes (.-GetAccessorExcludes ts/SymbolFlags))
(def set-accessor-excludes (.-SetAccessorExcludes ts/SymbolFlags))
(def type-parameter-excludes (.-TypeParameterExcludes ts/SymbolFlags))
(def type-alias-excludes (.-TypeAliasExcludes ts/SymbolFlags))
(def alias-excludes (.-AliasExcludes ts/SymbolFlags))
(def module-member (.-ModuleMember ts/SymbolFlags))
(def export-has-local (.-ExportHasLocal ts/SymbolFlags))
(def block-scoped (.-BlockScoped ts/SymbolFlags))
(def property-or-accessor (.-PropertyOrAccessor ts/SymbolFlags))
(def class-member (.-ClassMember ts/SymbolFlags))

